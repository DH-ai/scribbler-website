{
  "metadata": {
    "name": "SPACE INVADERS CLONE",
    "language_info": {
      "name": "JavaScipt",
      "version": "8.0"
    }
  },
  "jsnbversion": "v0.1",
  "cells": [
    {
      "code": "<div class=\"body\" id=\"body\">\n    <div class=\"stars\"></div>  \n\t<!-- for displaying the moving stars in the background -->\n    <div class=\"twinkling\"></div>\n\t<!-- for creating twinkling effect by moving black spots over the screen in the background -->\n    <div class=\"scoreboard\" id=\"scoreboard\">\n\t<!-- HUD at top for user stats -->\n        <div class=\"textbox\" id=\"textbox\">\n\t\t<!-- box containing level, score, highscore texts -->\n            <div class=\"level\" id=\"level\">Level : 1</div>\n            <div class=\"score\" id=\"score\">Score : 0</div>\n            <div class=\"highscore\" id=\"highscore\">High Score : 0</div>\n        </div>\n        <div class=\"healthbar\" id=\"healthbar\">\n\t\t<!-- box containing health bar and health count -->\n            <div class=\"hpcount\" id=\"hpcount\">HP : 1000/1000</div>\n            <div class=\"hpbar\" id=\"hpbar\">\n                <div class=\"currentHealth\" id=\"currentHealth\"></div>\n            </div>\n        </div>\n    </div>\n    <div class=\"game\" id=\"game\">\n\t<!-- main game box containing game elements -->\n        <div class=\"levelDisplay\" id=\"levelDisplay\"></div>\n        <div class=\"enemy\" id=\"enemy\"></div>\n\t\t<!-- div for containing alien enemies -->\n        <div class=\"endline\"></div>\n\t\t<!-- line after which enemy entering results in loss -->\n        <div class=\"space-ship\" id=\"ship\"><img src=\"https://github.com/Adam-Warlock09/Space-Invaders/blob/main/assets/sprites/spaceship.png?raw=true\" alt=\"\"></div>\n\t\t<!-- spaceship sprite -->\n    </div>\n</div>\n\n<style>\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n.body {\n  background: #000;\n  border: 5px solid #ff;\n  display: flex;\n  justify-content: center;\n  overflow: hidden;\n  height: 600px;\n  aspect-ratio: 1.78;\n  position: relative;\n}\n\n.stars,\n.twinkling {\n  position: absolute;\n  display: block;\n  height: 100%;\n  width: 100%;\n}\n\n/*IMAGE FOR STARS*/\n\n.stars {\n  background: url(\"https://github.com/Adam-Warlock09/Space-Invaders/blob/main/assets/bg/stars.png?raw=true\") repeat;\n  animation: moving-stars 8000s linear infinite;\n}\n\n/*IMAGE FOR TWINKLING*/\n\n.twinkling {\n  background: transparent url(\"https://github.com/Adam-Warlock09/Space-Invaders/blob/main/assets/bg/twinkling.png?raw=true\") repeat;\n  z-index: 2;\n  animation: moving-twinkle 300s linear infinite;\n}\n\n.scoreboard {\n  position: absolute;\n  width: 100%;\n  height: 7%;\n  z-index: 6;\n  font-family: \"New Amsterdam\", sans-serif;\n  font-weight: 400;\n  font-style: normal;\n  letter-spacing: 0.05rem;\n  font-size: 1.5rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0 1rem;\n  color: #fff;\n}\n\n.textbox,\n.healthbar {\n  display: flex;\n  align-items: center;\n}\n\n.textbox {\n  width: 30%;\n  height: 90%;\n  justify-content: space-evenly;\n}\n\n.healthbar {\n  width: 70%;\n  justify-content: flex-end;\n  height: 90%;\n}\n\n.hpbar {\n  width: 18rem;\n  height: 50%;\n  margin-left: 1rem;\n  border: 3.5px solid #fff;\n  background-color: transparent;\n  overflow: hidden;\n}\n\n.currentHealth {\n  height: 100%;\n  transition: width 0.3s ease-in-out;\n}\n\n.game {\n  display: flex;\n  justify-content: center;\n  align-items: flex-end;\n  height: 96%;\n  width: 92%;\n  position: absolute;\n  z-index: 3;\n}\n\n.levelDisplay {\n  position: absolute;\n  top: 10%;\n  width: 80%;\n  height: 50%;\n  opacity: 0;\n  font-family: \"VT323\", monospace;\n  color: #fff;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  font-size: 8rem;\n  font-weight: 400;\n  font-style: normal;\n  flex-direction: column;\n  transition: opacity 2s ease-in-out;\n}\n.levelDisplay>br {\n  display: block;\n  content: \"\";\n  margin-top: 1.5rem;\n}\n\n.buttonbox {\n  width: 100%;\n  height: 20%;\n  position: absolute;\n  bottom: 0;\n  display: flex;\n  align-items: center;\n  justify-content: space-evenly;\n}\n\n.choice-btn {\n  height: 3rem;\n  width: 6rem;\n  background-color: transparent;\n  border: 4px solid #ffffffcd;\n  color: #fff;\n  font-family: \"VT323\", monospace;\n  font-size: 1rem;\n  font-weight: 400;\n  font-style: normal;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: color 0.5s ease-in-out, background-color 0.5s ease-in-out;\n}\n\n.choice-btn:hover {\n  color: #000;\n  background-color: #fff;\n}\n\n.space-ship {\n  position: absolute;\n  /* transition: left 0.05s linear; */\n}\n\n.bullet {\n  background-color: yellow;\n  height: 0.95rem;\n  width: 0.15rem;\n  position: absolute;\n  z-index: 4;\n  /* transition: left top 0.05s linear; */\n}\n\n.bullet-enemy {\n  background-color: red;\n  height: 0.95rem;\n  width: 0.13rem;\n  position: absolute;\n  /* transition: top 0.05s linear;  */\n}\n\n.enemy {\n  display: inline-block;\n  width: 624px;\n  /*height: 40%; */\n  position: absolute;\n  z-index: 4;\n  top: 7%;\n  transition: top 0.005s linear, left 0.015s linear;\n}\n\n.alien-container {\n  display: inline-block;\n  margin: 6px;\n  height: 40px;\n  aspect-ratio: 1;\n}\n\n.alien-img {\n  height: 40px;\n  aspect-ratio: 1;\n}\n\n.endline {\n  position: absolute;\n  height: 0.2rem;\n  width: 100vw;\n  background-color: rgba(255, 0, 0, 0.2);\n  z-index: 7;\n  bottom: 9%;\n}\n\n@keyframes moving-stars {\n  from {\n    background-position: 0px 0px;\n  }\n\n  to {\n    background-position: 0px 1000000px;\n  }\n}\n\n@keyframes moving-twinkle {\n  from {\n    background-position: 0px 0px;\n  }\n\n  to {\n    background-position: 10000px 0px;\n  }\n}\n</style>",
      "status": "",
      "output": "<div class=\"body\" id=\"body\">\n    <div class=\"stars\"></div>  \n\t<!-- for displaying the moving stars in the background -->\n    <div class=\"twinkling\"></div>\n\t<!-- for creating twinkling effect by moving black spots over the screen in the background -->\n    <div class=\"scoreboard\" id=\"scoreboard\">\n\t<!-- HUD at top for user stats -->\n        <div class=\"textbox\" id=\"textbox\">\n\t\t<!-- box containing level, score, highscore texts -->\n            <div class=\"level\" id=\"level\">Level : 1</div>\n            <div class=\"score\" id=\"score\">Score : 0</div>\n            <div class=\"highscore\" id=\"highscore\">High Score : 0</div>\n        </div>\n        <div class=\"healthbar\" id=\"healthbar\">\n\t\t<!-- box containing health bar and health count -->\n            <div class=\"hpcount\" id=\"hpcount\">HP : 1000/1000</div>\n            <div class=\"hpbar\" id=\"hpbar\">\n                <div class=\"currentHealth\" id=\"currentHealth\" style=\"width: 100%; background: linear-gradient(to left, rgb(0, 255, 0), rgb(0, 128, 0));\"></div>\n            </div>\n        </div>\n    </div>\n    <div class=\"game\" id=\"game\">\n\t<!-- main game box containing game elements -->\n        <div class=\"levelDisplay\" id=\"levelDisplay\" style=\"opacity: 0;\">LEVEL 1</div>\n        <div class=\"enemy\" id=\"enemy\" style=\"top: 80px; left: 351.1px;\"><div class=\"alien-container\"><img src=\"https://github.com/Adam-Warlock09/Space-Invaders/blob/main/assets/sprites/alien-3.png?raw=true\" class=\"alien-img\"></div><div class=\"alien-container\"><img src=\"https://github.com/Adam-Warlock09/Space-Invaders/blob/main/assets/sprites/alien-3.png?raw=true\" class=\"alien-img\"></div><div class=\"alien-container\"><img src=\"https://github.com/Adam-Warlock09/Space-Invaders/blob/main/assets/sprites/alien-3.png?raw=true\" class=\"alien-img\"></div><div class=\"alien-container\"><img src=\"https://github.com/Adam-Warlock09/Space-Invaders/blob/main/assets/sprites/alien-3.png?raw=true\" class=\"alien-img\"></div><div class=\"alien-container\"><img src=\"https://github.com/Adam-Warlock09/Space-Invaders/blob/main/assets/sprites/alien-3.png?raw=true\" class=\"alien-img\"></div><div class=\"alien-container\"><img src=\"https://github.com/Adam-Warlock09/Space-Invaders/blob/main/assets/sprites/alien-3.png?raw=true\" class=\"alien-img\"></div><div class=\"alien-container\"><img src=\"https://github.com/Adam-Warlock09/Space-Invaders/blob/main/assets/sprites/alien-3.png?raw=true\" class=\"alien-img\"></div><div class=\"alien-container\"><img src=\"https://github.com/Adam-Warlock09/Space-Invaders/blob/main/assets/sprites/alien-3.png?raw=true\" class=\"alien-img\"></div><div class=\"alien-container\"><img src=\"https://github.com/Adam-Warlock09/Space-Invaders/blob/main/assets/sprites/alien-3.png?raw=true\" class=\"alien-img\"></div><div class=\"alien-container\"><img src=\"https://github.com/Adam-Warlock09/Space-Invaders/blob/main/assets/sprites/alien-3.png?raw=true\" class=\"alien-img\"></div><div class=\"alien-container\"><img src=\"https://github.com/Adam-Warlock09/Space-Invaders/blob/main/assets/sprites/alien-3.png?raw=true\" class=\"alien-img\"></div><div class=\"alien-container\"><img src=\"https://github.com/Adam-Warlock09/Space-Invaders/blob/main/assets/sprites/alien-3.png?raw=true\" class=\"alien-img\"></div><div class=\"alien-container\"><img src=\"https://github.com/Adam-Warlock09/Space-Invaders/blob/main/assets/sprites/alien-2.png?raw=true\" class=\"alien-img\"></div><div class=\"alien-container\"><img src=\"https://github.com/Adam-Warlock09/Space-Invaders/blob/main/assets/sprites/alien-2.png?raw=true\" class=\"alien-img\"></div><div class=\"alien-container\"><img src=\"https://github.com/Adam-Warlock09/Space-Invaders/blob/main/assets/sprites/alien-2.png?raw=true\" class=\"alien-img\"></div><div class=\"alien-container\"><img src=\"https://github.com/Adam-Warlock09/Space-Invaders/blob/main/assets/sprites/alien-2.png?raw=true\" class=\"alien-img\"></div><div class=\"alien-container\"><img src=\"https://github.com/Adam-Warlock09/Space-Invaders/blob/main/assets/sprites/alien-2.png?raw=true\" class=\"alien-img\"></div><div class=\"alien-container\"><img src=\"https://github.com/Adam-Warlock09/Space-Invaders/blob/main/assets/sprites/alien-2.png?raw=true\" class=\"alien-img\"></div><div class=\"alien-container\"><img src=\"https://github.com/Adam-Warlock09/Space-Invaders/blob/main/assets/sprites/alien-2.png?raw=true\" class=\"alien-img\"></div><div class=\"alien-container\"><img src=\"https://github.com/Adam-Warlock09/Space-Invaders/blob/main/assets/sprites/alien-2.png?raw=true\" class=\"alien-img\"></div><div class=\"alien-container\"><img src=\"https://github.com/Adam-Warlock09/Space-Invaders/blob/main/assets/sprites/alien-2.png?raw=true\" class=\"alien-img\"></div><div class=\"alien-container\"><img src=\"https://github.com/Adam-Warlock09/Space-Invaders/blob/main/assets/sprites/alien-2.png?raw=true\" class=\"alien-img\"></div><div class=\"alien-container\"><img src=\"https://github.com/Adam-Warlock09/Space-Invaders/blob/main/assets/sprites/alien-2.png?raw=true\" class=\"alien-img\"></div><div class=\"alien-container\"><img src=\"https://github.com/Adam-Warlock09/Space-Invaders/blob/main/assets/sprites/alien-2.png?raw=true\" class=\"alien-img\"></div><div class=\"alien-container\"><img src=\"https://github.com/Adam-Warlock09/Space-Invaders/blob/main/assets/sprites/alien-1.png?raw=true\" class=\"alien-img\"></div><div class=\"alien-container\"><img src=\"https://github.com/Adam-Warlock09/Space-Invaders/blob/main/assets/sprites/alien-1.png?raw=true\" class=\"alien-img\"></div><div class=\"alien-container\"><img src=\"https://github.com/Adam-Warlock09/Space-Invaders/blob/main/assets/sprites/alien-1.png?raw=true\" class=\"alien-img\"></div><div class=\"alien-container\"><img src=\"https://github.com/Adam-Warlock09/Space-Invaders/blob/main/assets/sprites/alien-1.png?raw=true\" class=\"alien-img\"></div><div class=\"alien-container\"><img src=\"https://github.com/Adam-Warlock09/Space-Invaders/blob/main/assets/sprites/alien-1.png?raw=true\" class=\"alien-img\"></div><div class=\"alien-container\"><img src=\"https://github.com/Adam-Warlock09/Space-Invaders/blob/main/assets/sprites/alien-1.png?raw=true\" class=\"alien-img\"></div><div class=\"alien-container\"><img src=\"https://github.com/Adam-Warlock09/Space-Invaders/blob/main/assets/sprites/alien-1.png?raw=true\" class=\"alien-img\"></div><div class=\"alien-container\"><img src=\"https://github.com/Adam-Warlock09/Space-Invaders/blob/main/assets/sprites/alien-1.png?raw=true\" class=\"alien-img\"></div><div class=\"alien-container\"><img src=\"https://github.com/Adam-Warlock09/Space-Invaders/blob/main/assets/sprites/alien-1.png?raw=true\" class=\"alien-img\"></div><div class=\"alien-container\"><img src=\"https://github.com/Adam-Warlock09/Space-Invaders/blob/main/assets/sprites/alien-1.png?raw=true\" class=\"alien-img\"></div><div class=\"alien-container\"><img src=\"https://github.com/Adam-Warlock09/Space-Invaders/blob/main/assets/sprites/alien-1.png?raw=true\" class=\"alien-img\"></div><div class=\"alien-container\"><img src=\"https://github.com/Adam-Warlock09/Space-Invaders/blob/main/assets/sprites/alien-1.png?raw=true\" class=\"alien-img\"></div></div>\n\t\t<!-- div for containing alien enemies -->\n        <div class=\"endline\"></div>\n\t\t<!-- line after which enemy entering results in loss -->\n        <div class=\"space-ship\" id=\"ship\" style=\"left: 246.571px;\"><img src=\"https://github.com/Adam-Warlock09/Space-Invaders/blob/main/assets/sprites/spaceship.png?raw=true\" alt=\"\"></div>\n\t\t<!-- spaceship sprite -->\n    <div class=\"bullet-enemy\" style=\"left: 480.729px; top: 427.313px;\"></div><div class=\"bullet-enemy\" style=\"left: 666.042px; top: 444.313px;\"></div></div>\n</div>\n\n<style>\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n.body {\n  background: #000;\n  border: 5px solid #ff;\n  display: flex;\n  justify-content: center;\n  overflow: hidden;\n  height: 600px;\n  aspect-ratio: 1.78;\n  position: relative;\n}\n\n.stars,\n.twinkling {\n  position: absolute;\n  display: block;\n  height: 100%;\n  width: 100%;\n}\n\n/*IMAGE FOR STARS*/\n\n.stars {\n  background: url(\"https://github.com/Adam-Warlock09/Space-Invaders/blob/main/assets/bg/stars.png?raw=true\") repeat;\n  animation: moving-stars 8000s linear infinite;\n}\n\n/*IMAGE FOR TWINKLING*/\n\n.twinkling {\n  background: transparent url(\"https://github.com/Adam-Warlock09/Space-Invaders/blob/main/assets/bg/twinkling.png?raw=true\") repeat;\n  z-index: 2;\n  animation: moving-twinkle 300s linear infinite;\n}\n\n.scoreboard {\n  position: absolute;\n  width: 100%;\n  height: 7%;\n  z-index: 6;\n  font-family: \"New Amsterdam\", sans-serif;\n  font-weight: 400;\n  font-style: normal;\n  letter-spacing: 0.05rem;\n  font-size: 1.5rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0 1rem;\n  color: #fff;\n}\n\n.textbox,\n.healthbar {\n  display: flex;\n  align-items: center;\n}\n\n.textbox {\n  width: 30%;\n  height: 90%;\n  justify-content: space-evenly;\n}\n\n.healthbar {\n  width: 70%;\n  justify-content: flex-end;\n  height: 90%;\n}\n\n.hpbar {\n  width: 18rem;\n  height: 50%;\n  margin-left: 1rem;\n  border: 3.5px solid #fff;\n  background-color: transparent;\n  overflow: hidden;\n}\n\n.currentHealth {\n  height: 100%;\n  transition: width 0.3s ease-in-out;\n}\n\n.game {\n  display: flex;\n  justify-content: center;\n  align-items: flex-end;\n  height: 96%;\n  width: 92%;\n  position: absolute;\n  z-index: 3;\n}\n\n.levelDisplay {\n  position: absolute;\n  top: 10%;\n  width: 80%;\n  height: 50%;\n  opacity: 0;\n  font-family: \"VT323\", monospace;\n  color: #fff;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  font-size: 8rem;\n  font-weight: 400;\n  font-style: normal;\n  flex-direction: column;\n  transition: opacity 2s ease-in-out;\n}\n.levelDisplay>br {\n  display: block;\n  content: \"\";\n  margin-top: 1.5rem;\n}\n\n.buttonbox {\n  width: 100%;\n  height: 20%;\n  position: absolute;\n  bottom: 0;\n  display: flex;\n  align-items: center;\n  justify-content: space-evenly;\n}\n\n.choice-btn {\n  height: 3rem;\n  width: 6rem;\n  background-color: transparent;\n  border: 4px solid #ffffffcd;\n  color: #fff;\n  font-family: \"VT323\", monospace;\n  font-size: 1rem;\n  font-weight: 400;\n  font-style: normal;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: color 0.5s ease-in-out, background-color 0.5s ease-in-out;\n}\n\n.choice-btn:hover {\n  color: #000;\n  background-color: #fff;\n}\n\n.space-ship {\n  position: absolute;\n  /* transition: left 0.05s linear; */\n}\n\n.bullet {\n  background-color: yellow;\n  height: 0.95rem;\n  width: 0.15rem;\n  position: absolute;\n  z-index: 4;\n  /* transition: left top 0.05s linear; */\n}\n\n.bullet-enemy {\n  background-color: red;\n  height: 0.95rem;\n  width: 0.13rem;\n  position: absolute;\n  /* transition: top 0.05s linear;  */\n}\n\n.enemy {\n  display: inline-block;\n  width: 624px;\n  /*height: 40%; */\n  position: absolute;\n  z-index: 4;\n  top: 7%;\n  transition: top 0.005s linear, left 0.015s linear;\n}\n\n.alien-container {\n  display: inline-block;\n  margin: 6px;\n  height: 40px;\n  aspect-ratio: 1;\n}\n\n.alien-img {\n  height: 40px;\n  aspect-ratio: 1;\n}\n\n.endline {\n  position: absolute;\n  height: 0.2rem;\n  width: 100vw;\n  background-color: rgba(255, 0, 0, 0.2);\n  z-index: 7;\n  bottom: 9%;\n}\n\n@keyframes moving-stars {\n  from {\n    background-position: 0px 0px;\n  }\n\n  to {\n    background-position: 0px 1000000px;\n  }\n}\n\n@keyframes moving-twinkle {\n  from {\n    background-position: 0px 0px;\n  }\n\n  to {\n    background-position: 10000px 0px;\n  }\n}\n</style>",
      "type": "html"
    },
    {
      "code": "\nfunction loadGoogleFonts() {\n  const font1 = document.createElement('link');\n  font1.rel = 'stylesheet';\n  font1.href = 'https://fonts.googleapis.com/css2?family=New+Amsterdam&display=swap';\n  document.head.appendChild(font1);\n\n  const font2 = document.createElement('link');\n  font2.rel = 'stylesheet';\n  font2.href = 'https://fonts.googleapis.com/css2?family=VT323&display=swap';\n  document.head.appendChild(font2);\n}\n\nloadGoogleFonts();\n",
      "status": "[3]<br><span style=\"font-size:8px\">1ms<span></span></span>",
      "output": "",
      "type": "code"
    },
    {
      "code": "const game = document.getElementById(\"game\");\nconst ship = document.getElementById(\"ship\");\nconst enemy = document.getElementById(\"enemy\");\nconst Body = document.getElementById(\"body\")\n\nconst gameWidth = game.clientWidth;\nconst shipWidth = ship.clientWidth;\n\nconst scoreCount = document.getElementById(\"score\")\nconst currentHP = document.getElementById(\"currentHealth\")\nconst hpCount = document.getElementById(\"hpcount\")\nconst levelCount = document.getElementById(\"level\")\nconst levelDisplay = document.getElementById(\"levelDisplay\")\nconst highScoreDisplay = document.getElementById(\"highscore\")\n\n//SOUNDS\n\nconst shootSound = new Audio('https://github.com/Adam-Warlock09/Space-Invaders/blob/main/assets/sounds/shoot.wav?raw=true');\nconst hitSound = new Audio(\"https://github.com/Adam-Warlock09/Space-Invaders/blob/main/assets/sounds/hit.mp3?raw=true\");\nconst bulletCollideSound = new Audio(\"https://github.com/Adam-Warlock09/Space-Invaders/blob/main/assets/sounds/buller.wav?raw=true\")\nconst dmgSound = new Audio(\"https://github.com/Adam-Warlock09/Space-Invaders/blob/main/assets/sounds/damage.wav?raw=true\")\nconst loseSound = new Audio(\"https://github.com/Adam-Warlock09/Space-Invaders/blob/main/assets/sounds/lose.wav?raw=true\")\nconst winSound = new Audio(\"https://github.com/Adam-Warlock09/Space-Invaders/blob/main/assets/sounds/win.wav?raw=true\")\nconst bgSound =  new Audio(\"https://github.com/Adam-Warlock09/Space-Invaders/blob/main/assets/sounds/bg.mp3?raw=true\")\nbgSound.loop = true\n\n//bg player\n\nbgSound.volume = 0.05\nbgSound.play()\n\nvar shooting = false\nvar shootInterval = null\nvar canShoot = true\n\nvar score = 0\nvar highscore = 0\nvar prevScore = 0\nvar currentHealth = 1000\n\nvar position = ship.getBoundingClientRect().left - game.getBoundingClientRect().left;\n\nvar movingLeft = false;\nvar movingRight = false;\nvar enemyDirection = 3;\n\nvar moveSpeed = 0.8;\nvar enemySpeed = 0.3;\n\nvar level = 0;\n\nvar maxLevel = 5;\n\nconst updateScore = () => {\n    scoreCount.innerHTML = `Score : ${score}`;\n    if(score > highscore) {\n        highscore = score\n        updateHighscore()\n    }\n    if (score - prevScore == (120 * ((1 * (1 + Math.ceil((level - 1) / 3))) + (2 * (1 + Math.ceil((level - 2) / 3))) + (3 * (1 + Math.ceil((level - 3) / 3)))))) {\n        prevScore = score\n        upLevel()\n    }\n}\n\nconst exitGame = () => {\n    levelDisplay.innerHTML = `Thank You For Playing!<br>Your HighScore : ${highscore}`\n    levelDisplay.style.fontSize = '2rem'\n    levelDisplay.style.opacity = \"1\"\n}\n\nconst updateHighscore = () => {\n    highScoreDisplay.innerHTML = `High Score : ${highscore}`\n}\n\nconst restartGame = () => {\n\n    level = 0\n    score = 0\n    prevScore = 0\n    currentHealth = 1000\n    levelDisplay.innerHTML = `Start New Game ?`\n    var btn1 = document.createElement(\"button\")\n    var btn2 = document.createElement(\"button\")\n    var buttonbox = document.createElement(\"div\")\n    buttonbox.classList.add(\"buttonbox\")\n    btn1.classList.add(\"choice-btn\")\n    btn2.classList.add(\"choice-btn\")\n    btn1.innerHTML = 'No'\n    btn2.innerHTML = 'Yes'\n    levelDisplay.appendChild(buttonbox)\n    buttonbox.appendChild(btn1)\n    buttonbox.appendChild(btn2)\n    levelDisplay.style.fontSize = '4rem'\n    levelDisplay.style.opacity = \"1\"\n\n    btn1.addEventListener('click', () => {\n\n        btn1.disabled = true\n        setTimeout(() => {\n\n            levelDisplay.style.opacity = \"0\"\n            setTimeout(() => {\n                levelDisplay.style.fontSize = '8rem'\n                levelDisplay.innerHTML = ''\n                exitGame()\n            }, 2000);\n\n        }, 2000);\n        \n    })\n\n    btn2.addEventListener('click', () => {\n        btn2.disabled = true\n        setTimeout(() => {\n\n            levelDisplay.style.opacity = \"0\"\n            setTimeout(() => {\n                levelDisplay.style.fontSize = '8rem'\n                levelDisplay.innerHTML = ''\n                upLevel()\n            }, 2000);\n\n        }, 2000);\n    })\n\n}\n\nconst updateHealth = () => {\n\n    hpCount.innerHTML = `HP : ${currentHealth}/1000`\n\n    currentHP.style.width = `${currentHealth / 10}%`\n\n    currentHP.style.background = `linear-gradient(to left, rgb(${255 - (255 * currentHealth/1000)}, ${255 * currentHealth / 1000}, 0), rgb(${128 * (1 - (currentHealth / 1000))},${128 * (currentHealth / 1000)}, 0))`\n\n    if(currentHealth == 0){\n        enemy.innerHTML = \"\"\n        enemy.style.top = \"7%\"\n        enemy.style.left = \"auto\"\n\n        levelDisplay.innerHTML = `YOU LOST`\n\n        levelDisplay.style.opacity = \"1\"\n\n        setTimeout(() => {\n\n            loseSound.volume = 1\n            loseSound.play();\n            levelDisplay.style.opacity = \"0\"\n            setTimeout(() => {\n                restartGame()\n            }, 2000);\n\n        }, 2000);\n    }\n\n}\n\nfunction moveShip() {\n\n    if (!((position == 0 || position == (gameWidth - shipWidth)) && (movingLeft && movingRight))) {\n        if (movingLeft && position > 0) {\n            position -= (position >= moveSpeed ? moveSpeed : position);\n        }\n        if (movingRight && position < (gameWidth - shipWidth)) {\n            position += ((gameWidth - shipWidth - position) > moveSpeed ? moveSpeed : (gameWidth - shipWidth - position))\n        }\n\n        ship.style.left = `${position}px`;\n\n    }\n\n    requestAnimationFrame(moveShip);\n\n}\n\nconst upLevel = () => {\n\n    level += 1\n    if (level == maxLevel) {\n        levelDisplay.innerHTML = `YOU WON`\n        levelDisplay.style.opacity = \"1\"\n\n        setTimeout(() => {\n\n            levelDisplay.style.opacity = \"0\"\n            setTimeout(() => {\n                restartGame()\n            }, 2000)\n\n        }, 2000);\n\n        return\n    }\n    levelCount.innerHTML = `Level : ${level}`\n    enemy.innerHTML = \"\"\n    enemy.style.top = \"7%\"\n    enemy.style.left = \"auto\"\n    levelDisplay.innerHTML = `LEVEL ${level}`\n    levelDisplay.style.opacity = \"1\"\n\n    updateHealth();\n\n    updateScore();\n    \n    if (level != 1) {\n        winSound.volume = 1\n        winSound.play();\n    }\n\n    setTimeout(() => {\n        \n        levelDisplay.style.opacity = \"0\"\n\n        setTimeout(() => {\n            \n            spawnAlien();\n\n            requestAnimationFrame(moveEnemy);\n\n            attackBullet();\n\n        }, 2500);\n        \n    }, 2000);\n\n}\n\ndocument.addEventListener('keydown', (event) => {\n    if(event.code ==  \"ArrowLeft\") {\n            movingLeft = true;\n\t}else if(event.code == \"ArrowRight\"){\n            movingRight = true;\n\t}else if(event.code == \"KeyG\"){\n            if (!shooting) {\n\n                shooting = true\n                if (!shootInterval) {\n\n                    var d = 0\n\n                    if (ship.getBoundingClientRect().left == game.getBoundingClientRect().left || Math.round(ship.getBoundingClientRect().right) == Math.round(game.getBoundingClientRect().right)) {\n                        d = 0\n                    } else {\n\n                        if (movingLeft) {\n                            if (movingRight) {\n                                d = 0\n                            } else {\n                                d = -1\n                            }\n                        } else {\n                            if (movingRight) {\n                                d = 1\n                            } else {\n                                d = 0\n                            }\n                        }\n\n                    }\n\n                    shootBullet(d)\n\n                    shootInterval = setInterval(() => {\n                        if (!shooting) {\n                            clearInterval(shootInterval)\n                            shootInterval = null\n                            return\n                        }\n\n                        var d = 0\n\n                        if (ship.getBoundingClientRect().left == game.getBoundingClientRect().left || Math.round(ship.getBoundingClientRect().right) == Math.round(game.getBoundingClientRect().right)) {\n                            d = 0\n                        } else {\n\n                            if (movingLeft) {\n                                if (movingRight) {\n                                    d = 0\n                                } else {\n                                    d = -1\n                                }\n                            } else {\n                                if (movingRight) {\n                                    d = 1\n                                } else {\n                                    d = 0\n                                }\n                            }\n\n                        }\n\n                        shootBullet(d)\n\n                    }, 500)\n                }\n\n            }\n\t}\n    \n});\n\ndocument.addEventListener('keyup', (event) => {\n    switch (event.key) {\n        case \"ArrowLeft\":\n            movingLeft = false;\n            break;\n        case \"ArrowRight\":\n            movingRight = false;\n            break;\n        case \"g\":\n            shooting = false;\n            clearInterval(shootInterval)\n            shootInterval = null\n            break;\n    }\n});\n\nconst shootBullet = (direction) => {\n\n    if (!canShoot) return;\n\n    canShoot = false\n  \n    var bullet = document.createElement('div')\n    bullet.classList.add('bullet')\n    game.appendChild(bullet)\n\n    let bulletPositionX = position + (shipWidth / 2) - 1;\n    let bulletPositionY = ship.getBoundingClientRect().top\n\n    bullet.style.left = `${bulletPositionX}px`\n    bullet.style.top = `${bulletPositionY}px`\n\t\n\tvar shootSoundClone = shootSound.cloneNode();\n    shootSoundClone.volume = 0.08\n    shootSoundClone.play()\n\n    function moveBullet() {\n\n        if (!bullet) return\n\t  \n        let bulletSpeedY = 1;\n        bulletPositionY -= bulletSpeedY\n        bullet.style.top = `${bulletPositionY}px`\n\n        let d_y = ship.getBoundingClientRect().top - bulletPositionY\n\n        var bulletSpeedX = moveSpeed * (1 - (d_y / game.clientHeight) ** (1 / 3))\n        bulletPositionX += (bulletSpeedX * direction)\n        bullet.style.left = `${bulletPositionX}px`\n\n        var aliens = document.querySelectorAll(\"#enemy .alien-container\");\n\n        aliens.forEach((alien, index) => {\n\n            let alienRect = alien.getBoundingClientRect();\n            let bulletRect = bullet.getBoundingClientRect();\n\n            if (alien.children[0].style.visibility != 'hidden' && (bulletRect.left < alienRect.right && bulletRect.right > alienRect.left && bulletRect.top < alienRect.bottom && bulletRect.bottom > alienRect.top)) {\n                alien.children[0].style.visibility = 'hidden'\n                const hitClone = hitSound.cloneNode();\n                hitClone.volume = 0.08\n                hitClone.play();\n                let enemy_level\n                if (alien.children[0].src.includes(\"alien-1\")) {\n                    enemy_level = 1\n                } else if (alien.children[0].src.includes(\"alien-2\")) {\n                    enemy_level = 2\n                } else {\n                    enemy_level = 3\n                }\n                score += 10 * enemy_level\n                updateScore()\n                bullet.remove()\n\n                let f = true\n                let i = index - index % 12\n                let z = i\n\n                while(aliens[i]){\n                    if(aliens[i].children[0].style.visibility != 'hidden'){\n                        f = false\n                        break;\n                    }\n                    i += 1\n                }\n\n                if(f == true){\n                    while (aliens[z]) {\n                        aliens[z].remove()\n                        z += 1\n                    }\n                }\n\n                return;\n            }\n\n        });\n\n        if (bulletPositionX < 0 || bulletPositionX > Body.clientWidth) {\n            bullet.remove()\n        }\n        else if (bulletPositionY < 0) {\n            bullet.remove()\n        } else {\n            requestAnimationFrame(moveBullet)\n        }\n\n    }\n\n    requestAnimationFrame(moveBullet)\n\n    setTimeout(() => {\n        canShoot = true\n    }, 300);\n\n};\n\nconst spawnAlien = () => {\n    let a_rows = 1 + Math.ceil((level - 1) / 3)\n    let b_rows = 1 + Math.ceil((level - 2) / 3)\n    let c_rows = 1 + Math.ceil((level - 3) / 3)\n    for (i = 0; i < (a_rows + b_rows + c_rows); i++) {\n        for (j = 0; j < 12; j++) {\n            var alien = document.createElement('div')\n            alien.classList.add('alien-container')\n            enemy.appendChild(alien)\n            var img = document.createElement('img')\n            var n = 0\n            if (i + 1 <= c_rows) {\n                n = 3;\n            } else if (i + 1 <= c_rows + b_rows) {\n                n = 2\n            } else {\n                n = 1\n            }\n            img.src = `https://github.com/Adam-Warlock09/Space-Invaders/blob/main/assets/sprites/alien-${n}.png?raw=true`\n            img.classList.add('alien-img')\n            alien.appendChild(img)\n        }\n    }\n};\n\nfunction moveEnemy() {\n\n    if(enemy.innerHTML == \"\") return;\n\n    var enemyLeftPos = enemy.offsetLeft;\n    var enemyWidth = enemy.clientWidth;\n\n    if (enemy.offsetTop + enemy.clientHeight >= game.clientHeight) return\n\n    var flag = 1\n\n    if (enemyLeftPos + enemyWidth >= game.clientWidth || enemyLeftPos < 0) {\n\n        enemyDirection *= -1\n        if (ship.getBoundingClientRect().top - enemy.getBoundingClientRect().bottom <= 40){\n            enemy.style.top = `${enemy.offsetTop + (ship.getBoundingClientRect().top - enemy.getBoundingClientRect().bottom)}px`\n            currentHealth = 0\n            updateHealth()\n            return\n        }\n        if (enemyLeftPos + enemyWidth >= game.clientWidth) {\n            enemy.style.left = `${enemy.offsetLeft + (enemyLeftPos + enemyWidth - game.clientWidth + 5) * (-1)}px`;\n            flag = 0\n        }else if(enemyLeftPos < 0){\n\t\t  enemy.style.left = `10px`\n\t\t  flag = 0\n\t\t}\n\t  enemy.style.top = `${enemy.offsetTop + 40}px`;\n    }\n\n    if(flag == 1){\n        enemy.style.left = `${enemy.offsetLeft + enemySpeed * enemyDirection}px`;\n    }\n\n    requestAnimationFrame(moveEnemy)\n\n};\n\nconst attackBullet = () => {\n\n    var aliens = document.querySelectorAll(\"#enemy .alien-container\");\n\n    if(aliens.length == 0) return;\n\n    var attackers = []\n    aliens.forEach((alien) => {\n        if (alien.children[0].style.visibility != \"hidden\") {\n            attackers.push(alien)\n        }\n    })\n\n    var attacking = []\n\n    for (var z = 0; z < level * 3; z++) {\n        let selected = attackers[Math.round(Math.random() * (attackers.length))]\n        if (attackers.length > level * 3 * 1.5) {\n            while (attacking.includes(selected)) {\n                selected = attackers[Math.round(Math.random() * (attackers.length))]\n            }\n        }\n        attacking.push(selected)\n    }\n\n    attacking.forEach((attack_elem, index) => {\n\n        var randomTime = Math.floor((Math.random() * 900) + 100)\n\n        setTimeout(() => {\n\n            if (!attack_elem) return;\n\n            var enemy_bullet = document.createElement('div')\n            enemy_bullet.classList.add('bullet-enemy')\n            game.appendChild(enemy_bullet)\n\n            let bulletPositionX = attack_elem.getBoundingClientRect().left + attack_elem.clientWidth / 2 - game.getBoundingClientRect().left;\n            let bulletPositionY = attack_elem.getBoundingClientRect().bottom - game.getBoundingClientRect().top - attack_elem.clientHeight * 0.25\n\n            enemy_bullet.style.left = `${bulletPositionX}px`\n            enemy_bullet.style.top = `${bulletPositionY}px`\n\n            const moveAttackBullet = () => {\n\n                if (!enemy_bullet) return\n\n                let bulletSpeedY = 1;\n                bulletPositionY += bulletSpeedY\n                enemy_bullet.style.top = `${bulletPositionY}px`\n\n                let player_bullets = document.querySelectorAll(\".bullet\")\n                var enemy_bulletRect = enemy_bullet.getBoundingClientRect();\n\n                player_bullets.forEach((player_bullet) => {\n\n                    let player_bulletRect = player_bullet.getBoundingClientRect();\n\n                    if (((enemy_bulletRect.left > player_bulletRect.left && enemy_bulletRect.left < player_bulletRect.right) || (enemy_bulletRect.right > player_bulletRect.left && enemy_bulletRect.right < player_bulletRect.right)) && ((enemy_bulletRect.top > player_bulletRect.top && enemy_bulletRect.top < player_bulletRect.bottom) || (enemy_bulletRect.bottom > player_bulletRect.top && enemy_bulletRect.bottom < player_bulletRect.bottom))) {\n                        var hitClone = hitSound.cloneNode();\n                        hitClone.volume = 0.5\n                        hitClone.play();\n                        player_bullet.remove()\n                        enemy_bullet.remove()\n                        return;\n                    }\n\n                });\n\n                if (enemy_bulletRect.left < ship.getBoundingClientRect().right && enemy_bulletRect.right > ship.getBoundingClientRect().left && enemy_bulletRect.top < ship.getBoundingClientRect().bottom && enemy_bulletRect.bottom > ship.getBoundingClientRect().top) {\n                    currentHealth -= 100 * level\n                    var dmClone = dmgSound.cloneNode();\n                    dmClone.volume = 0.5\n                    dmClone.play();\n                    if (currentHealth < 0) currentHealth = 0\n                    updateHealth()\n                    enemy_bullet.remove()\n                    return;\n                }\n\n                if (bulletPositionY > Body.clientHeight) {\n                    enemy_bullet.remove()\n                } else {\n                    requestAnimationFrame(moveAttackBullet)\n                }\n\n            }\n\n            requestAnimationFrame(moveAttackBullet)\n\n        }, (index * randomTime))\n\n    })\n\n    setTimeout(() => {\n        attackBullet()\n    }, level * 5000)\n\n};\n\nrequestAnimationFrame(moveShip);\n\nupLevel()",
      "status": "[4]<br><span style=\"font-size:8px\">71ms<span></span></span>",
      "output": "",
      "type": "code"
    }
  ],
  "source": "https://github.com/gopi-suvanam/jsnb",
  "run_on_load": false
}