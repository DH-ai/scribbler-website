{
  "metadata": {
    "name": "Lesson 10: Scripts, Modules and APIs",
    "language_info": {
      "name": "JavaScipt",
      "version": "8.0"
    }
  },
  "jsnbversion": "v0.1",
  "cells": [
    {
      "code": "<div style=\"text-align:center;background-color:#fede02;color:#555;margin:-10px;margin-left:-20px;margin-right:-20px;\">\n\n        <br><h1  style=\"color:#555\">Learn Foundations of JavaScript in 10 Easy Lessons</h1>\n<p class=\"site-masthead__description mb-0\" style=\"color:#555\">\n        This is a course in foundations of JavaScript in 10 lessons with easy to use interactive workbooks.\n    </p><br></div>",
      "status": "",
      "output": "<div style=\"text-align:center;background-color:#fede02;color:#555;margin:-10px;margin-left:-20px;margin-right:-20px;\">\n\n        <br><h1 style=\"color:#555\">Learn Foundations of JavaScript in 10 Easy Lessons</h1>\n<p class=\"site-masthead__description mb-0\" style=\"color:#555\">\n        This is a course in foundations of JavaScript in 10 lessons with easy to use interactive workbooks.\n    </p><br></div>",
      "type": "html"
    },
    {
      "code": "<h1>Scripts, Modules and APIs: Lesson 10 of 10</h1>",
      "status": "",
      "output": "<h1>Scripts, Modules and APIs: Lesson 10 of 10</h1>",
      "type": "html"
    },
    {
      "code": "<h2>Overview</h2>\nIn the realm of web development, understanding how to effectively use scripts, modules, and APIs is crucial. This chapter delves into the fundamentals of these components, their roles in modern web development, and how they interact to create dynamic and interactive web applications.\n<h3>Scripts and Modules</h3>\nScripts and modules are both essential in organizing and executing JavaScript code, yet they serve distinct purposes. Scripts typically encompass standalone JavaScript files included directly within HTML documents. They often consist of functions and variables intended for global use. On the other hand, modules encapsulate reusable code with clearly defined interfaces, promoting modularity and encapsulation. Modules employ the `import` and `export` statements to define dependencies and export functionality.\n<br>Scripts and modules can be used to load libraries built by other or by yourself. \n<h3>Web APIs</h3>\nApplication Programming Interfaces (APIs) facilitate communication between different software applications, allowing them to interact and share data. A notable example of an API is the OpenWeather API, which provides access to weather data from around the world. Utilizing JavaScript's `fetch()` method, developers can query the API and retrieve real-time weather information based on geographic coordinates or location names.\n",
      "status": "",
      "output": "<h2>Overview</h2>\nIn the realm of web development, understanding how to effectively use scripts, modules, and APIs is crucial. This chapter delves into the fundamentals of these components, their roles in modern web development, and how they interact to create dynamic and interactive web applications.\n<h3>Scripts and Modules</h3>\nScripts and modules are both essential in organizing and executing JavaScript code, yet they serve distinct purposes. Scripts typically encompass standalone JavaScript files included directly within HTML documents. They often consist of functions and variables intended for global use. On the other hand, modules encapsulate reusable code with clearly defined interfaces, promoting modularity and encapsulation. Modules employ the `import` and `export` statements to define dependencies and export functionality.\n<br>Scripts and modules can be used to load libraries built by other or by yourself. \n<h3>Web APIs</h3>\nApplication Programming Interfaces (APIs) facilitate communication between different software applications, allowing them to interact and share data. A notable example of an API is the OpenWeather API, which provides access to weather data from around the world. Utilizing JavaScript's `fetch()` method, developers can query the API and retrieve real-time weather information based on geographic coordinates or location names.\n",
      "type": "html"
    },
    {
      "code": "<h2>Loading a Script</h2>\nExternal scripts can be loaded into an HTML document using the &lt;script&gt; tag. Here's how you can load an external JavaScript file named externalScript.js:\n<pre>\n&lt;script src=\"link/to/externalScript.js\" > &lt/script> \n</pre>\nA popular libary that people use to make JavaScript coding easy is jQuery. jQuery is a fast, small, and feature-rich JavaScript library. It simplifies various tasks in web development such as HTML document traversal and manipulation, event handling, animation, and AJAX (asynchronous JavaScript and XML) interactions. jQuery can be loaded like this in HTML:\n<pre>\n&lt;script src=\"https://code.jquery.com/jquery-3.6.0.min.js\" > &lt/script> \n</pre>",
      "status": "",
      "output": "<h2>Loading a Script</h2>\nExternal scripts can be loaded into an HTML document using the &lt;script&gt; tag. Here's how you can load an external JavaScript file named externalScript.js:\n<pre>&lt;script src=\"link/to/externalScript.js\" &gt; &lt;/script&gt; \n</pre>\nA popular libary that people use to make JavaScript coding easy is jQuery. jQuery is a fast, small, and feature-rich JavaScript library. It simplifies various tasks in web development such as HTML document traversal and manipulation, event handling, animation, and AJAX (asynchronous JavaScript and XML) interactions. jQuery can be loaded like this in HTML:\n<pre>&lt;script src=\"https://code.jquery.com/jquery-3.6.0.min.js\" &gt; &lt;/script&gt; \n</pre>",
      "type": "html"
    },
    {
      "code": "<h2>Loading Modules</h2>\n<h3>Static Import</h3>\nModules help in keeping code clean and not loading the system without \"polluting\" the namespace and memory. As of jQuery version 3.0, jQuery officially supports being loaded as an ES6 module. This means you can import jQuery as a module in your JavaScript code using the import statement. This is how it can be done:\n<pre>\n&lt;script type=\"module\">\n  import $ from \"https://code.jquery.com/jquery-3.6.0.min.js\" ;\n  \n  &lt/script> \n</pre>\nIn this example:\n<br>- We use the &ltscript type=\"module\"> tag to indicate that we're loading a JavaScript module.\n<br>- Inside the module script, we use the import statement to import jQuery from the CDN URL directly.\n<br>- This is called static import, where the module is loaded when the HTML page is loaded.\n<br>- You can use jQuery functionality by calling it using the function $ (I know it is an odd name for a function. But jQuery chose it, not me).\n<h3>Dynamic Import</h3>\nYou can also import modules dynamically using the import() function, which is a feature of latest JavaScript modules that allows for dynamic module loading. This loads the module asynchronously. <br>Here's how you can do it.\n<pre>\n  import(\"link/to/module.js\")\n\t.then(module=>{\n\t\t  //Do something with the imported value\n  \t\t\tlet \n\t\t  })\n\t.catch(error => {\n\t  // Handle errors\n\t});\n </pre>\nIn the cell below we load jQuery dynamically and change the background color of the document to red. Run the next cell to see the impact. The fucntion 'css' is a special jQuery function used to change styles easily.",
      "status": "",
      "output": "<h2>Loading Modules</h2>\n<h3>Static Import</h3>\nModules help in keeping code clean and not loading the system without \"polluting\" the namespace and memory. As of jQuery version 3.0, jQuery officially supports being loaded as an ES6 module. This means you can import jQuery as a module in your JavaScript code using the import statement. This is how it can be done:\n<pre>&lt;script type=\"module\"&gt;\n  import $ from \"https://code.jquery.com/jquery-3.6.0.min.js\" ;\n  \n  &lt;/script&gt; \n</pre>\nIn this example:\n<br>- We use the &lt;script type=\"module\"&gt; tag to indicate that we're loading a JavaScript module.\n<br>- Inside the module script, we use the import statement to import jQuery from the CDN URL directly.\n<br>- This is called static import, where the module is loaded when the HTML page is loaded.\n<br>- You can use jQuery functionality by calling it using the function $ (I know it is an odd name for a function. But jQuery chose it, not me).\n<h3>Dynamic Import</h3>\nYou can also import modules dynamically using the import() function, which is a feature of latest JavaScript modules that allows for dynamic module loading. This loads the module asynchronously. <br>Here's how you can do it.\n<pre>  import(\"link/to/module.js\")\n\t.then(module=&gt;{\n\t\t  //Do something with the imported value\n  \t\t\tlet \n\t\t  })\n\t.catch(error =&gt; {\n\t  // Handle errors\n\t});\n </pre>\nIn the cell below we load jQuery dynamically and change the background color of the document to red. Run the next cell to see the impact. The fucntion 'css' is a special jQuery function used to change styles easily.",
      "type": "html"
    },
    {
      "code": "import('https://code.jquery.com/jquery-3.6.0.min.js')\n            .then(() => {\n                // jQuery loaded successfully\n  \t\t\t\t\n                    // jQuery code here\n                    jQuery('body').css('background-color', 'white');\n\n            })\n            .catch(error => {\n                // Handle errors if jQuery fails to load\n                scrib.show('Failed to load jQuery:', error.message);\n            });",
      "status": "[39]<br><span style=\"font-size:8px\">0ms<span></span></span>",
      "output": "{} <br>",
      "type": "code"
    },
    {
      "code": "<h2>About jQuery</h2>\njQuery can be used for a variety of purposes.\nIt seems like you meant \"jQuery\" instead of \"jsquery.\" jQuery is a popular JavaScript library that simplifies HTML document traversing, event handling, animating, and Ajax interactions for rapid web development. Here's a brief overview of how jQuery can be used:\n<br>- DOM Manipulation\n<br>- Event Handling\n<br>- Asynchronous Interactions\n<br>- Animation and Effects\n<br>Overall, jQuery simplifies JavaScript development by providing a concise and consistent API for common tasks, making it easier to write efficient and cross-browser compatible code. However, with the advancements in modern JavaScript and browser APIs, the need for jQuery has diminished in some cases. Have a loot at this link for more details: <a href=\"https://www.w3schools.com/jquery/jquery_intro.asp\" target=\"_blank\">jQuery Introduction in W3 Schools</a>.",
      "status": "",
      "output": "<h2>About jQuery</h2>\njQuery can be used for a variety of purposes.\nIt seems like you meant \"jQuery\" instead of \"jsquery.\" jQuery is a popular JavaScript library that simplifies HTML document traversing, event handling, animating, and Ajax interactions for rapid web development. Here's a brief overview of how jQuery can be used:\n<br>- DOM Manipulation\n<br>- Event Handling\n<br>- Asynchronous Interactions\n<br>- Animation and Effects\n<br>Overall, jQuery simplifies JavaScript development by providing a concise and consistent API for common tasks, making it easier to write efficient and cross-browser compatible code. However, with the advancements in modern JavaScript and browser APIs, the need for jQuery has diminished in some cases. Have a loot at this link for more details: <a href=\"https://www.w3schools.com/jquery/jquery_intro.asp\" target=\"_blank\">jQuery Introduction in W3 Schools</a>.",
      "type": "html"
    },
    {
      "code": "<h3>Using Plotly.js</h3>\nPlotly is a powerful Python library for creating interactive and visually appealing data visualizations. It supports over 40 unique chart types, making it versatile for various use cases, including statistical analysis, financial data, geographic mapping, scientific plots, and 3D graphics.\nMore details are here: <a href=\"https://plotly.com/javascript/\">Plotly.js</a>\n<br>We can load plotly using the script below in the HTML file:\n<pre>\n &ltscript src=\"https://cdn.plot.ly/plotly-2.29.1.min.js\">&lt/script>\n</pre>\nWe will use the dynamic import for loading the library. We will chart the graph for squaring a number. We will use the map function discussed in <a href=\"https://app.scribbler.live/#github:gopi-suvanam/scribbler-website/learn/intro-lesson-6b.jsnb\" target=\"_blank\">Lesson 6B</a>",
      "status": "",
      "output": "<h3>Using Plotly.js</h3>\nPlotly is a powerful Python library for creating interactive and visually appealing data visualizations. It supports over 40 unique chart types, making it versatile for various use cases, including statistical analysis, financial data, geographic mapping, scientific plots, and 3D graphics.\nMore details are here: <a href=\"https://plotly.com/javascript/\">Plotly.js</a>\n<br>We can load plotly using the script below in the HTML file:\n<pre> &lt;script src=\"https://cdn.plot.ly/plotly-2.29.1.min.js\"&gt;&lt;/script&gt;\n</pre>\nWe will use the dynamic import for loading the library. We will chart the graph for squaring a number. We will use the map function discussed in <a href=\"https://app.scribbler.live/#github:gopi-suvanam/scribbler-website/learn/intro-lesson-6b.jsnb\" target=\"_blank\">Lesson 6B</a>",
      "type": "html"
    },
    {
      "code": "scrib.show(\"<div id='my-chart'></div>\")\nimport('https://d3js.org/d3.v7.min.js')\n            .then(() => {\n                //Generating data\n                const xValues=[1,2,3,4,5,6];\n  \t\t\t\tconst yValues=xValues.map(\n\t\t\t\t\t   function(num) {\n\t\t\t\t\t\treturn num * num;\n\t\t\t\t\t  }\n\t\t\t\t  )\n\t\t\t\t//Plot the chart\n\t\t\t\tPlotly.newPlot(\"my-chart\",[{x:xValues,y:yValues}]);\n            })\n            .catch(error => {\n                // Handle errors\n                console.error('Failed to load Plotly.js:', error);\n            });",
      "status": "[4]<br><span style=\"font-size:8px\">1ms<span></span></span>",
      "output": "<div id=\"my-chart\" class=\"js-plotly-plot\"><div class=\"plot-container plotly\"><div class=\"user-select-none svg-container\" style=\"position: relative; width: 1039px; height: 450px;\"><svg class=\"main-svg\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"1039\" height=\"450\" style=\"background: rgb(255, 255, 255);\"><defs id=\"defs-b59086\"><g class=\"clips\"><clipPath id=\"clipb59086xyplot\" class=\"plotclip\"><rect width=\"879\" height=\"270\"></rect></clipPath><clipPath class=\"axesclip\" id=\"clipb59086x\"><rect x=\"80\" y=\"0\" width=\"879\" height=\"450\"></rect></clipPath><clipPath class=\"axesclip\" id=\"clipb59086y\"><rect x=\"0\" y=\"100\" width=\"1039\" height=\"270\"></rect></clipPath><clipPath class=\"axesclip\" id=\"clipb59086xy\"><rect x=\"80\" y=\"100\" width=\"879\" height=\"270\"></rect></clipPath></g><g class=\"gradients\"></g><g class=\"patterns\"></g></defs><g class=\"bglayer\"></g><g class=\"draglayer cursor-crosshair\"><g class=\"xy\"><rect class=\"nsewdrag drag\" data-subplot=\"xy\" x=\"80\" y=\"100\" width=\"879\" height=\"270\" style=\"fill: transparent; stroke-width: 0; pointer-events: all;\"></rect><rect class=\"nwdrag drag cursor-nw-resize\" data-subplot=\"xy\" x=\"60\" y=\"80\" width=\"20\" height=\"20\" style=\"fill: transparent; stroke-width: 0; pointer-events: all;\"></rect><rect class=\"nedrag drag cursor-ne-resize\" data-subplot=\"xy\" x=\"959\" y=\"80\" width=\"20\" height=\"20\" style=\"fill: transparent; stroke-width: 0; pointer-events: all;\"></rect><rect class=\"swdrag drag cursor-sw-resize\" data-subplot=\"xy\" x=\"60\" y=\"370\" width=\"20\" height=\"20\" style=\"fill: transparent; stroke-width: 0; pointer-events: all;\"></rect><rect class=\"sedrag drag cursor-se-resize\" data-subplot=\"xy\" x=\"959\" y=\"370\" width=\"20\" height=\"20\" style=\"fill: transparent; stroke-width: 0; pointer-events: all;\"></rect><rect class=\"ewdrag drag cursor-ew-resize\" data-subplot=\"xy\" x=\"167.9\" y=\"370.5\" width=\"703.2\" height=\"20\" style=\"fill: transparent; stroke-width: 0; pointer-events: all;\"></rect><rect class=\"wdrag drag cursor-w-resize\" data-subplot=\"xy\" x=\"80\" y=\"370.5\" width=\"87.9\" height=\"20\" style=\"fill: transparent; stroke-width: 0; pointer-events: all;\"></rect><rect class=\"edrag drag cursor-e-resize\" data-subplot=\"xy\" x=\"871.1\" y=\"370.5\" width=\"87.9\" height=\"20\" style=\"fill: transparent; stroke-width: 0; pointer-events: all;\"></rect><rect class=\"nsdrag drag cursor-ns-resize\" data-subplot=\"xy\" x=\"59.5\" y=\"127\" width=\"20\" height=\"216\" style=\"fill: transparent; stroke-width: 0; pointer-events: all;\"></rect><rect class=\"sdrag drag cursor-s-resize\" data-subplot=\"xy\" x=\"59.5\" y=\"343\" width=\"20\" height=\"27\" style=\"fill: transparent; stroke-width: 0; pointer-events: all;\"></rect><rect class=\"ndrag drag cursor-n-resize\" data-subplot=\"xy\" x=\"59.5\" y=\"100\" width=\"20\" height=\"27\" style=\"fill: transparent; stroke-width: 0; pointer-events: all;\"></rect></g></g><g class=\"layer-below\"><g class=\"imagelayer\"></g><g class=\"shapelayer\"></g></g><g class=\"cartesianlayer\"><g class=\"subplot xy\"><g class=\"layer-subplot\"><g class=\"shapelayer\"></g><g class=\"imagelayer\"></g></g><g class=\"minor-gridlayer\"><g class=\"x\"></g><g class=\"y\"></g></g><g class=\"gridlayer\"><g class=\"x\"><path class=\"xgrid crisp\" transform=\"translate(127.7,0)\" d=\"M0,100v270\" style=\"stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;\"></path><path class=\"xgrid crisp\" transform=\"translate(284.41999999999996,0)\" d=\"M0,100v270\" style=\"stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;\"></path><path class=\"xgrid crisp\" transform=\"translate(441.14,0)\" d=\"M0,100v270\" style=\"stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;\"></path><path class=\"xgrid crisp\" transform=\"translate(597.86,0)\" d=\"M0,100v270\" style=\"stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;\"></path><path class=\"xgrid crisp\" transform=\"translate(754.58,0)\" d=\"M0,100v270\" style=\"stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;\"></path><path class=\"xgrid crisp\" transform=\"translate(911.3,0)\" d=\"M0,100v270\" style=\"stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;\"></path></g><g class=\"y\"><path class=\"ygrid crisp\" transform=\"translate(0,292.19)\" d=\"M80,0h879\" style=\"stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;\"></path><path class=\"ygrid crisp\" transform=\"translate(0,224.91)\" d=\"M80,0h879\" style=\"stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;\"></path><path class=\"ygrid crisp\" transform=\"translate(0,157.62)\" d=\"M80,0h879\" style=\"stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;\"></path></g></g><g class=\"zerolinelayer\"><path class=\"yzl zl crisp\" transform=\"translate(0,359.48)\" d=\"M80,0h879\" style=\"stroke: rgb(68, 68, 68); stroke-opacity: 1; stroke-width: 1px;\"></path></g><path class=\"xlines-below\"></path><path class=\"ylines-below\"></path><g class=\"overlines-below\"></g><g class=\"xaxislayer-below\"></g><g class=\"yaxislayer-below\"></g><g class=\"overaxes-below\"></g><g class=\"plot\" transform=\"translate(80,100)\" clip-path=\"url(#clipb59086xyplot)\"><g class=\"scatterlayer mlayer\"><g class=\"trace scatter tracee5d932\" style=\"stroke-miterlimit: 2; opacity: 1;\"><g class=\"fills\"></g><g class=\"errorbars\"></g><g class=\"lines\"><path class=\"js-line\" d=\"M47.7,252.75L204.42,232.56L361.14,198.92L517.86,151.82L674.58,91.26L831.3,17.25\" style=\"vector-effect: non-scaling-stroke; fill: none; stroke: rgb(31, 119, 180); stroke-opacity: 1; stroke-width: 2px; opacity: 1;\"></path></g><g class=\"points\"><path class=\"point\" transform=\"translate(47.7,252.75)\" d=\"M3,0A3,3 0 1,1 0,-3A3,3 0 0,1 3,0Z\" style=\"opacity: 1; stroke-width: 0px; fill: rgb(31, 119, 180); fill-opacity: 1;\"></path><path class=\"point\" transform=\"translate(204.42,232.56)\" d=\"M3,0A3,3 0 1,1 0,-3A3,3 0 0,1 3,0Z\" style=\"opacity: 1; stroke-width: 0px; fill: rgb(31, 119, 180); fill-opacity: 1;\"></path><path class=\"point\" transform=\"translate(361.14,198.92)\" d=\"M3,0A3,3 0 1,1 0,-3A3,3 0 0,1 3,0Z\" style=\"opacity: 1; stroke-width: 0px; fill: rgb(31, 119, 180); fill-opacity: 1;\"></path><path class=\"point\" transform=\"translate(517.86,151.82)\" d=\"M3,0A3,3 0 1,1 0,-3A3,3 0 0,1 3,0Z\" style=\"opacity: 1; stroke-width: 0px; fill: rgb(31, 119, 180); fill-opacity: 1;\"></path><path class=\"point\" transform=\"translate(674.58,91.26)\" d=\"M3,0A3,3 0 1,1 0,-3A3,3 0 0,1 3,0Z\" style=\"opacity: 1; stroke-width: 0px; fill: rgb(31, 119, 180); fill-opacity: 1;\"></path><path class=\"point\" transform=\"translate(831.3,17.25)\" d=\"M3,0A3,3 0 1,1 0,-3A3,3 0 0,1 3,0Z\" style=\"opacity: 1; stroke-width: 0px; fill: rgb(31, 119, 180); fill-opacity: 1;\"></path></g><g class=\"text\"></g></g></g></g><g class=\"overplot\"></g><path class=\"xlines-above crisp\" d=\"M0,0\" style=\"fill: none;\"></path><path class=\"ylines-above crisp\" d=\"M0,0\" style=\"fill: none;\"></path><g class=\"overlines-above\"></g><g class=\"xaxislayer-above\"><g class=\"xtick\"><text text-anchor=\"middle\" x=\"0\" y=\"383\" data-unformatted=\"1\" data-math=\"N\" transform=\"translate(127.7,0)\" style=\"font-family: &quot;Open Sans&quot;, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;\">1</text></g><g class=\"xtick\"><text text-anchor=\"middle\" x=\"0\" y=\"383\" data-unformatted=\"2\" data-math=\"N\" style=\"font-family: &quot;Open Sans&quot;, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;\" transform=\"translate(284.41999999999996,0)\">2</text></g><g class=\"xtick\"><text text-anchor=\"middle\" x=\"0\" y=\"383\" data-unformatted=\"3\" data-math=\"N\" style=\"font-family: &quot;Open Sans&quot;, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;\" transform=\"translate(441.14,0)\">3</text></g><g class=\"xtick\"><text text-anchor=\"middle\" x=\"0\" y=\"383\" data-unformatted=\"4\" data-math=\"N\" style=\"font-family: &quot;Open Sans&quot;, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;\" transform=\"translate(597.86,0)\">4</text></g><g class=\"xtick\"><text text-anchor=\"middle\" x=\"0\" y=\"383\" data-unformatted=\"5\" data-math=\"N\" style=\"font-family: &quot;Open Sans&quot;, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;\" transform=\"translate(754.58,0)\">5</text></g><g class=\"xtick\"><text text-anchor=\"middle\" x=\"0\" y=\"383\" data-unformatted=\"6\" data-math=\"N\" style=\"font-family: &quot;Open Sans&quot;, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;\" transform=\"translate(911.3,0)\">6</text></g></g><g class=\"yaxislayer-above\"><g class=\"ytick\"><text text-anchor=\"end\" x=\"79\" y=\"4.199999999999999\" data-unformatted=\"0\" data-math=\"N\" transform=\"translate(0,359.48)\" style=\"font-family: &quot;Open Sans&quot;, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;\">0</text></g><g class=\"ytick\"><text text-anchor=\"end\" x=\"79\" y=\"4.199999999999999\" data-unformatted=\"10\" data-math=\"N\" style=\"font-family: &quot;Open Sans&quot;, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;\" transform=\"translate(0,292.19)\">10</text></g><g class=\"ytick\"><text text-anchor=\"end\" x=\"79\" y=\"4.199999999999999\" data-unformatted=\"20\" data-math=\"N\" style=\"font-family: &quot;Open Sans&quot;, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;\" transform=\"translate(0,224.91)\">20</text></g><g class=\"ytick\"><text text-anchor=\"end\" x=\"79\" y=\"4.199999999999999\" data-unformatted=\"30\" data-math=\"N\" style=\"font-family: &quot;Open Sans&quot;, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;\" transform=\"translate(0,157.62)\">30</text></g></g><g class=\"overaxes-above\"></g></g></g><g class=\"polarlayer\"></g><g class=\"smithlayer\"></g><g class=\"ternarylayer\"></g><g class=\"geolayer\"></g><g class=\"funnelarealayer\"></g><g class=\"pielayer\"></g><g class=\"iciclelayer\"></g><g class=\"treemaplayer\"></g><g class=\"sunburstlayer\"></g><g class=\"glimages\"></g></svg><div class=\"gl-container\"></div><svg class=\"main-svg\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"1039\" height=\"450\"><defs id=\"topdefs-b59086\"><g class=\"clips\"></g></defs><g class=\"indicatorlayer\"></g><g class=\"layer-above\"><g class=\"imagelayer\"></g><g class=\"shapelayer\"></g></g><g class=\"selectionlayer\"></g><g class=\"infolayer\"><g class=\"g-gtitle\"></g><g class=\"g-xtitle\"></g><g class=\"g-ytitle\"></g></g><g class=\"menulayer\"></g><g class=\"zoomlayer\"></g></svg><div class=\"modebar-container\" style=\"position: absolute; top: 0px; right: 0px; width: 100%;\"><div id=\"modebar-b59086\" class=\"modebar modebar--hover ease-bg\"><div class=\"modebar-group\"><a rel=\"tooltip\" class=\"modebar-btn\" data-title=\"Download plot as a png\" data-toggle=\"false\" data-gravity=\"n\"><svg viewBox=\"0 0 1000 1000\" class=\"icon\" height=\"1em\" width=\"1em\"><path d=\"m500 450c-83 0-150-67-150-150 0-83 67-150 150-150 83 0 150 67 150 150 0 83-67 150-150 150z m400 150h-120c-16 0-34 13-39 29l-31 93c-6 15-23 28-40 28h-340c-16 0-34-13-39-28l-31-94c-6-15-23-28-40-28h-120c-55 0-100-45-100-100v-450c0-55 45-100 100-100h800c55 0 100 45 100 100v450c0 55-45 100-100 100z m-400-550c-138 0-250 112-250 250 0 138 112 250 250 250 138 0 250-112 250-250 0-138-112-250-250-250z m365 380c-19 0-35 16-35 35 0 19 16 35 35 35 19 0 35-16 35-35 0-19-16-35-35-35z\" transform=\"matrix(1 0 0 -1 0 850)\"></path></svg></a></div><div class=\"modebar-group\"><a rel=\"tooltip\" class=\"modebar-btn active\" data-title=\"Zoom\" data-attr=\"dragmode\" data-val=\"zoom\" data-toggle=\"false\" data-gravity=\"n\"><svg viewBox=\"0 0 1000 1000\" class=\"icon\" height=\"1em\" width=\"1em\"><path d=\"m1000-25l-250 251c40 63 63 138 63 218 0 224-182 406-407 406-224 0-406-182-406-406s183-406 407-406c80 0 155 22 218 62l250-250 125 125z m-812 250l0 438 437 0 0-438-437 0z m62 375l313 0 0-312-313 0 0 312z\" transform=\"matrix(1 0 0 -1 0 850)\"></path></svg></a><a rel=\"tooltip\" class=\"modebar-btn\" data-title=\"Pan\" data-attr=\"dragmode\" data-val=\"pan\" data-toggle=\"false\" data-gravity=\"n\"><svg viewBox=\"0 0 1000 1000\" class=\"icon\" height=\"1em\" width=\"1em\"><path d=\"m1000 350l-187 188 0-125-250 0 0 250 125 0-188 187-187-187 125 0 0-250-250 0 0 125-188-188 186-187 0 125 252 0 0-250-125 0 187-188 188 188-125 0 0 250 250 0 0-126 187 188z\" transform=\"matrix(1 0 0 -1 0 850)\"></path></svg></a><a rel=\"tooltip\" class=\"modebar-btn\" data-title=\"Box Select\" data-attr=\"dragmode\" data-val=\"select\" data-toggle=\"false\" data-gravity=\"n\"><svg viewBox=\"0 0 1000 1000\" class=\"icon\" height=\"1em\" width=\"1em\"><path d=\"m0 850l0-143 143 0 0 143-143 0z m286 0l0-143 143 0 0 143-143 0z m285 0l0-143 143 0 0 143-143 0z m286 0l0-143 143 0 0 143-143 0z m-857-286l0-143 143 0 0 143-143 0z m857 0l0-143 143 0 0 143-143 0z m-857-285l0-143 143 0 0 143-143 0z m857 0l0-143 143 0 0 143-143 0z m-857-286l0-143 143 0 0 143-143 0z m286 0l0-143 143 0 0 143-143 0z m285 0l0-143 143 0 0 143-143 0z m286 0l0-143 143 0 0 143-143 0z\" transform=\"matrix(1 0 0 -1 0 850)\"></path></svg></a><a rel=\"tooltip\" class=\"modebar-btn\" data-title=\"Lasso Select\" data-attr=\"dragmode\" data-val=\"lasso\" data-toggle=\"false\" data-gravity=\"n\"><svg viewBox=\"0 0 1031 1000\" class=\"icon\" height=\"1em\" width=\"1em\"><path d=\"m1018 538c-36 207-290 336-568 286-277-48-473-256-436-463 10-57 36-108 76-151-13-66 11-137 68-183 34-28 75-41 114-42l-55-70 0 0c-2-1-3-2-4-3-10-14-8-34 5-45 14-11 34-8 45 4 1 1 2 3 2 5l0 0 113 140c16 11 31 24 45 40 4 3 6 7 8 11 48-3 100 0 151 9 278 48 473 255 436 462z m-624-379c-80 14-149 48-197 96 42 42 109 47 156 9 33-26 47-66 41-105z m-187-74c-19 16-33 37-39 60 50-32 109-55 174-68-42-25-95-24-135 8z m360 75c-34-7-69-9-102-8 8 62-16 128-68 170-73 59-175 54-244-5-9 20-16 40-20 61-28 159 121 317 333 354s407-60 434-217c28-159-121-318-333-355z\" transform=\"matrix(1 0 0 -1 0 850)\"></path></svg></a></div><div class=\"modebar-group\"><a rel=\"tooltip\" class=\"modebar-btn\" data-title=\"Zoom in\" data-attr=\"zoom\" data-val=\"in\" data-toggle=\"false\" data-gravity=\"n\"><svg viewBox=\"0 0 875 1000\" class=\"icon\" height=\"1em\" width=\"1em\"><path d=\"m1 787l0-875 875 0 0 875-875 0z m687-500l-187 0 0-187-125 0 0 187-188 0 0 125 188 0 0 187 125 0 0-187 187 0 0-125z\" transform=\"matrix(1 0 0 -1 0 850)\"></path></svg></a><a rel=\"tooltip\" class=\"modebar-btn\" data-title=\"Zoom out\" data-attr=\"zoom\" data-val=\"out\" data-toggle=\"false\" data-gravity=\"n\"><svg viewBox=\"0 0 875 1000\" class=\"icon\" height=\"1em\" width=\"1em\"><path d=\"m0 788l0-876 875 0 0 876-875 0z m688-500l-500 0 0 125 500 0 0-125z\" transform=\"matrix(1 0 0 -1 0 850)\"></path></svg></a><a rel=\"tooltip\" class=\"modebar-btn\" data-title=\"Autoscale\" data-attr=\"zoom\" data-val=\"auto\" data-toggle=\"false\" data-gravity=\"n\"><svg viewBox=\"0 0 1000 1000\" class=\"icon\" height=\"1em\" width=\"1em\"><path d=\"m250 850l-187 0-63 0 0-62 0-188 63 0 0 188 187 0 0 62z m688 0l-188 0 0-62 188 0 0-188 62 0 0 188 0 62-62 0z m-875-938l0 188-63 0 0-188 0-62 63 0 187 0 0 62-187 0z m875 188l0-188-188 0 0-62 188 0 62 0 0 62 0 188-62 0z m-125 188l-1 0-93-94-156 156 156 156 92-93 2 0 0 250-250 0 0-2 93-92-156-156-156 156 94 92 0 2-250 0 0-250 0 0 93 93 157-156-157-156-93 94 0 0 0-250 250 0 0 0-94 93 156 157 156-157-93-93 0 0 250 0 0 250z\" transform=\"matrix(1 0 0 -1 0 850)\"></path></svg></a><a rel=\"tooltip\" class=\"modebar-btn\" data-title=\"Reset axes\" data-attr=\"zoom\" data-val=\"reset\" data-toggle=\"false\" data-gravity=\"n\"><svg viewBox=\"0 0 928.6 1000\" class=\"icon\" height=\"1em\" width=\"1em\"><path d=\"m786 296v-267q0-15-11-26t-25-10h-214v214h-143v-214h-214q-15 0-25 10t-11 26v267q0 1 0 2t0 2l321 264 321-264q1-1 1-4z m124 39l-34-41q-5-5-12-6h-2q-7 0-12 3l-386 322-386-322q-7-4-13-4-7 2-12 7l-35 41q-4 5-3 13t6 12l401 334q18 15 42 15t43-15l136-114v109q0 8 5 13t13 5h107q8 0 13-5t5-13v-227l122-102q5-5 6-12t-4-13z\" transform=\"matrix(1 0 0 -1 0 850)\"></path></svg></a></div><div class=\"modebar-group\"><a href=\"https://plotly.com/\" target=\"_blank\" data-title=\"Produced with Plotly.js (v2.16.1)\" class=\"modebar-btn plotlyjsicon modebar-btn--logo\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 132 132\" height=\"1em\" width=\"1em\"><defs> <style>  .cls-0{fill:#000;}  .cls-1{fill:#FFF;}  .cls-2{fill:#F26;}  .cls-3{fill:#D69;}  .cls-4{fill:#BAC;}  .cls-5{fill:#9EF;} </style></defs> <title>plotly-logomark</title> <g id=\"symbol\">  <rect class=\"cls-0\" x=\"0\" y=\"0\" width=\"132\" height=\"132\" rx=\"18\" ry=\"18\"></rect>  <circle class=\"cls-5\" cx=\"102\" cy=\"30\" r=\"6\"></circle>  <circle class=\"cls-4\" cx=\"78\" cy=\"30\" r=\"6\"></circle>  <circle class=\"cls-4\" cx=\"78\" cy=\"54\" r=\"6\"></circle>  <circle class=\"cls-3\" cx=\"54\" cy=\"30\" r=\"6\"></circle>  <circle class=\"cls-2\" cx=\"30\" cy=\"30\" r=\"6\"></circle>  <circle class=\"cls-2\" cx=\"30\" cy=\"54\" r=\"6\"></circle>  <path class=\"cls-1\" d=\"M30,72a6,6,0,0,0-6,6v24a6,6,0,0,0,12,0V78A6,6,0,0,0,30,72Z\"></path>  <path class=\"cls-1\" d=\"M78,72a6,6,0,0,0-6,6v24a6,6,0,0,0,12,0V78A6,6,0,0,0,78,72Z\"></path>  <path class=\"cls-1\" d=\"M54,48a6,6,0,0,0-6,6v48a6,6,0,0,0,12,0V54A6,6,0,0,0,54,48Z\"></path>  <path class=\"cls-1\" d=\"M102,48a6,6,0,0,0-6,6v48a6,6,0,0,0,12,0V54A6,6,0,0,0,102,48Z\"></path> </g></svg></a></div></div></div><svg class=\"main-svg\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"1039\" height=\"450\"><g class=\"hoverlayer\"></g></svg></div></div></div> <br>{} <br>",
      "type": "code"
    },
    {
      "code": "<h2>Web APIs</h2>\nApplication Programming Interfaces (APIs) facilitate communication between different software applications, allowing them to interact and share data. Asynchronous function fetch can be used to access APIs. Typically APIs respond with an object converted as a text called JSON (short form for JavaScript Object Notation). This JSON text can be converted using \n<pre>\n   fetch('https://api.example.com/data')\n       .then(response => {\n          return response.json();\n       })\n       .then(data => {\n            //Do something with the data\n       })\n       .catch(error => {\n  \t\t   //Handle errors\n           console.error('There was a problem with the fetch operation:', error);\n       });\n</pre>\n\n\n",
      "status": "",
      "output": "<h2>Web APIs</h2>\nApplication Programming Interfaces (APIs) facilitate communication between different software applications, allowing them to interact and share data. Asynchronous function fetch can be used to access APIs. Typically APIs respond with an object converted as a text called JSON (short form for JavaScript Object Notation). This JSON text can be converted using \n<pre>   fetch('https://api.example.com/data')\n       .then(response =&gt; {\n          return response.json();\n       })\n       .then(data =&gt; {\n            //Do something with the data\n       })\n       .catch(error =&gt; {\n  \t\t   //Handle errors\n           console.error('There was a problem with the fetch operation:', error);\n       });\n</pre>\n\n\n",
      "type": "html"
    },
    {
      "code": "<h3>Example</h3>\nIn the example below, we will use a test API (jsonplaceholder) to get user details. We will use forEach loop to get the name and email of each user. We will show these using scrib.show. jsonplaceholder is free to use dummy API for testing purposes.",
      "status": "",
      "output": "<h3>Example</h3>\nIn the example below, we will use a test API (jsonplaceholder) to get user details. We will use forEach loop to get the name and email of each user. We will show these using scrib.show. jsonplaceholder is free to use dummy API for testing purposes.",
      "type": "html"
    },
    {
      "code": " fetch('https://jsonplaceholder.typicode.com/users')\n       .then(response => {\n          return response.json();\n       })\n       .then(data => {\n            data.forEach(function(user){\n\t\t\t  scrib.show(user.name,user.email);\n\t\t\t})\n       })\n       .catch(error => {\n  \t\t   //Handle errors\n           console.error('There was a problem with the fetch operation:', error);\n       });\n",
      "status": "[68]<br><span style=\"font-size:8px\">1ms<span></span></span>",
      "output": "{} <br>Leanne Graham Sincere@april.biz <br>Ervin Howell Shanna@melissa.tv <br>Clementine Bauch Nathan@yesenia.net <br>Patricia Lebsack Julianne.OConner@kory.org <br>Chelsey Dietrich Lucio_Hettinger@annie.ca <br>Mrs. Dennis Schulist Karley_Dach@jasper.info <br>Kurtis Weissnat Telly.Hoeger@billy.biz <br>Nicholas Runolfsdottir V Sherwood@rosamond.me <br>Glenna Reichert Chaim_McDermott@dana.io <br>Clementina DuBuque Rey.Padberg@karina.biz <br>",
      "type": "code"
    },
    {
      "code": "<h3>Experiment</h3>\nOther than name and email, the data also has other fields including phone number, address etc. Can use scrib.show(user) to show all data. Later you can pick and choose a few elements.",
      "status": "",
      "output": "<h3>Experiment</h3>\nOther than name and email, the data also has other fields including phone number, address etc. Can use scrib.show(user) to show all data. Later you can pick and choose a few elements.",
      "type": "html"
    },
    {
      "code": "<h3>Crypto-Currency Price API</h3>\n<a href=\"https://www.coingecko.com\">CoinGecko</a> provides a range of APIs for getting price data of Cryptcurrencies. We will use it to get the latest price of Bitcoin below.",
      "status": "",
      "output": "<h3>Crypto-Currency Price API</h3>\n<a href=\"https://www.coingecko.com\">CoinGecko</a> provides a range of APIs for getting price data of Cryptcurrencies. We will use it to get the latest price of Bitcoin below.",
      "type": "html"
    },
    {
      "code": "fetch('https://api.coingecko.com/api/v3/simple/price?ids=bitcoin&vs_currencies=usd')\n  .then(response => response.json())\n  .then(data => scrib.show(\"Latest Bitcoin Price:\",data.bitcoin.usd))\n",
      "status": "[11]<br><span style=\"font-size:8px\">4ms<span></span></span>",
      "output": "{} <br>Latest Bitcoin Price: 63298 <br>",
      "type": "code"
    },
    {
      "code": "<h3>API with Authentication</h3>\nA notable example of an API is the OpenWeather API, which provides access to weather data from around the world. Utilizing JavaScript's fetch() method, developers can query the API and retrieve real-time weather information based on geographic coordinates or location names. It requires and API key to run. You can get the key by signing in here: <a href=\"https://home.openweathermap.org/users/sign_in\">https://home.openweathermap.org/users/sign_in</a>. Replace the API key from the site and paste it in the first line in the cell below to get weather of London.\n",
      "status": "",
      "output": "<h3>API with Authentication</h3>\nA notable example of an API is the OpenWeather API, which provides access to weather data from around the world. Utilizing JavaScript's fetch() method, developers can query the API and retrieve real-time weather information based on geographic coordinates or location names. It requires and API key to run. You can get the key by signing in here: <a href=\"https://home.openweathermap.org/users/sign_in\">https://home.openweathermap.org/users/sign_in</a>. Replace the API key from the site and paste it in the first line in the cell below to get weather of London.\n",
      "type": "html"
    },
    {
      "code": "const YOUR_API_KEY='get a key and paste here';\nfetch('https://api.openweathermap.org/data/2.5/weather?q=London&appid='+YOUR_API_KEY)\n  .then(response => {\n    return response.json();\n  })\n  .then(data => {\n    scrib.show(data);\n  })\n  .catch(error => {\n    scrib.show('There was a problem with the fetch operation:', error);\n  });\n",
      "status": "[8]<br><span style=\"font-size:8px\">3ms<span></span></span>",
      "output": "{} <br>{\n  \"cod\": 401,\n  \"message\": \"Invalid API key. Please see https://openweathermap.org/faq#error401 for more info.\"\n} <br>",
      "type": "code"
    },
    {
      "code": "<h2>Summary</h2>\nThis chapter provided a comprehensive exploration of scripts, modules, and APIs in web development. It elucidated the differences between scripts and modules, emphasizing the modular nature of the latter. Additionally, it showcased the practical implementation of APIs, exemplified by the OpenWeather API, demonstrating how developers can leverage external data sources to enrich web applications. By mastering these concepts, developers can create robust and interconnected web experiences that cater to the dynamic needs of users.",
      "status": "",
      "output": "<h2>Summary</h2>\nThis chapter provided a comprehensive exploration of scripts, modules, and APIs in web development. It elucidated the differences between scripts and modules, emphasizing the modular nature of the latter. Additionally, it showcased the practical implementation of APIs, exemplified by the OpenWeather API, demonstrating how developers can leverage external data sources to enrich web applications. By mastering these concepts, developers can create robust and interconnected web experiences that cater to the dynamic needs of users.",
      "type": "html"
    },
    {
      "code": "<h2>Learn More</h2>\n<ul>\n  <li><a href=\"https://app.scribbler.live#\" target=\"_blank\">Blank Notebook for Experimentation</a></li>\n  <li><a href=\"https://scribbler.live/learn\" target=\"_blank\">Back to Course Contents</a></li>\n<li><a href=\"https://app.scribbler.live/?jsnb=https://scribbler.live/learn/intro-lesson-9.jsnb\" target=\"_blank\">Lesson 9:  Try...Catch and Asynchronous Programming</a></li>\n  <li><a href=\"https://scribbler.live/learn/javascript-tutorial-beginners/bonus-lesson\" target=\"_blank\">Bonus Lesson:  Putting it all Together</a></li>\n  \n  </ul>",
      "status": "",
      "output": "<h2>Learn More</h2>\n<ul>\n  <li><a href=\"https://app.scribbler.live#\" target=\"_blank\">Blank Notebook for Experimentation</a></li>\n  <li><a href=\"https://scribbler.live/learn\" target=\"_blank\">Back to Course Contents</a></li>\n<li><a href=\"https://app.scribbler.live/?jsnb=https://scribbler.live/learn/intro-lesson-9.jsnb\" target=\"_blank\">Lesson 9:  Try...Catch and Asynchronous Programming</a></li>\n  <li><a href=\"https://scribbler.live/learn/javascript-tutorial-beginners/bonus-lesson\" target=\"_blank\">Bonus Lesson:  Putting it all Together</a></li>\n  \n  </ul>",
      "type": "html"
    }
  ],
  "source": "https://github.com/gopi-suvanam/jsnb",
  "run_on_load": false
}